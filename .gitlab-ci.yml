stages:
  - build
  - test
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375/

services:
  - docker:dind

before_script:
  - dnf update -y && dnf install -y openssh-clients
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
  - chmod 600 ~/.ssh/known_hosts

build:
  stage: build
  image: docker:20.10.16
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/authentication:latest -f authentication/Dockerfile ./authentication
    - docker push $CI_REGISTRY_IMAGE/authentication:latest
    - docker build -t $CI_REGISTRY_IMAGE/backend:latest -f backend/Dockerfile ./backend
    - docker push $CI_REGISTRY_IMAGE/backend:latest
    - docker build -t $CI_REGISTRY_IMAGE/bff:latest -f bff/Dockerfile ./bff
    - docker push $CI_REGISTRY_IMAGE/bff:latest
    - docker build -t $CI_REGISTRY_IMAGE/profile:latest -f profile/Dockerfile ./profile
    - docker push $CI_REGISTRY_IMAGE/profile:latest
    - docker build -t $CI_REGISTRY_IMAGE/reservation:latest -f reservation/Dockerfile ./reservation
    - docker push $CI_REGISTRY_IMAGE/reservation:latest
    - docker build -t $CI_REGISTRY_IMAGE/frontend:latest -f frontend/Dockerfile ./frontend
    - docker push $CI_REGISTRY_IMAGE/frontend:latest

test:
  stage: test
  image: maven:3.9.8-amazoncorretto-17-al2023
  cache:
    paths:
      - ~/.m2/repository
  script:
    - mvn clean test -f authentication/pom.xml
    - mvn clean test -f backend/pom.xml
    - mvn clean test -f bff/pom.xml
    - mvn clean test -f profile/pom.xml
    - mvn clean test -f reservation/pom.xml

deploy:
  stage: deploy
  image: ubuntu:latest
  services:
    - docker:dind
  before_script:
    - apt-get update && apt-get install -y openssh-client git docker-compose
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/gitlab_ci_deploy_key
    - chmod 600 ~/.ssh/gitlab_ci_deploy_key
    - ssh-add ~/.ssh/gitlab_ci_deploy_key
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh -i ~/.ssh/gitlab_ci_deploy_key -o StrictHostKeyChecking=no root@49.12.109.90 "
      if [ -d /home/TennisTime ]; then
      cd /home/TennisTime && git pull origin main;
      else
      git clone git@gitlab.com:miladfahimi2012/tennistime.git /home/TennisTime;
      fi &&
      cd /home/TennisTime/devops &&
      docker-compose pull &&
      docker-compose up -d --remove-orphans
      "
  only:
    - main
