version: "3.8"

services:
  postgres:
    image: postgres:15 # Use a specific PostgreSQL version
    container_name: tennistime_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: tennistime_test
    volumes:
      - /home/TennisTime/tennistime/postgres_data:/var/lib/postgresql/data
    networks:
      - devops_app-network
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: tennistime_redis
    networks:
      - devops_app-network
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  smtp:
    build:
      context: /home/TennisTime/tennistime/FakeSMTP
      dockerfile: Dockerfile
    container_name: smtp_fake
    ports:
      - "8025:8025"
    networks:
      - devops_app-network
    volumes:
      - /home/TennisTime/tennistime/FakeSMTP/target:/app/target

  authentication:
    build:
      context: /home/TennisTime/tennistime/authentication
      dockerfile: Dockerfile.dev
    container_name: authentication_dev
    volumes:
      - /home/TennisTime/tennistime/authentication/src:/app/src:delegated
      - /home/TennisTime/tennistime/authentication/target:/app/target:delegated
      - /home/TennisTime/tennistime/authentication/pom.xml:/app/pom.xml
    networks:
      - devops_app-network
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      DB_HOST: postgres
      DB_PORT: 5432
      jwt.secret: Dy64nBQfRKEQtLTRDV42R8/H3XsxVFFk+zrXb2l+PQz8j+p5vR+RYAkfLK+jXdhmRrx3gU8yU9TcvKjL43FUYw==


networks:
  devops_app-network:
    name: devops_app-network