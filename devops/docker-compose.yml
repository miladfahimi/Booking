version: "3.8" # Ensure you're using version 3.8 or later

services:
  postgres:
    image: postgres:15 # Use a specific PostgreSQL version
    container_name: tennistime_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: tennistime_test
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devops_app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: tennistime_redis
    networks:
      - devops_app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  smtp:
    image: mailhog/mailhog
    container_name: tennistime_smtp
    networks:
      - devops_app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8025"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: registry.gitlab.com/miladfahimi2012/tennistime/backend:latest
    container_name: tennistime_backend
    networks:
      - devops_app-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  authentication:
    image: registry.gitlab.com/miladfahimi2012/tennistime/authentication:latest
    container_name: tennistime_authentication
    networks:
      - devops_app-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  bff:
    image: registry.gitlab.com/miladfahimi2012/tennistime/bff:latest
    container_name: tennistime_bff
    networks:
      - devops_app-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8089/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  profile:
    image: registry.gitlab.com/miladfahimi2012/tennistime/profile:latest
    container_name: tennistime_profile
    networks:
      - devops_app-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8099/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  reservation:
    image: registry.gitlab.com/miladfahimi2012/tennistime/reservation:latest
    container_name: tennistime_reservation
    networks:
      - devops_app-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8085/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: registry.gitlab.com/miladfahimi2012/tennistime/frontend:latest
    container_name: tennistime_nginx
    volumes:
      - ./frontend/www:/usr/share/nginx/html
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - devops_app-network
    depends_on:
      - backend
      - authentication
      - bff
      - profile
      - reservation

networks:
  devops_app-network:
    name: devops_app-network

volumes:
  postgres_data:
